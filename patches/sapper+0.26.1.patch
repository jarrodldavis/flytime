diff --git a/node_modules/sapper/dist/chunk-8ea8a181.js b/node_modules/sapper/dist/chunk-8ea8a181.js
index c9744c4..5902f3c 100644
--- a/node_modules/sapper/dist/chunk-8ea8a181.js
+++ b/node_modules/sapper/dist/chunk-8ea8a181.js
@@ -66,34 +66,34 @@ function check_weird(port) {
     });
 }
 
-function find(port) {
+function find(port, host) {
     return weird().then(function (weird$$1) {
         if (weird$$1) {
             return new Promise(function (fulfil) {
-                get_port_weird(port, fulfil);
+                get_port_weird(port, host, fulfil);
             });
         }
         return new Promise(function (fulfil) {
-            get_port(port, fulfil);
+            get_port(port, host, fulfil);
         });
     });
 }
-function get_port(port, cb) {
+function get_port(port, host, cb) {
     var server = net.createServer();
     server.unref();
     server.on('error', function () {
-        get_port(port + 1, cb);
+        get_port(port + 1, host, cb);
     });
-    server.listen({ port: port }, function () {
+    server.listen({ port: port, host: host }, function () {
         server.close(function () {
             cb(port);
         });
     });
 }
-function get_port_weird(port, cb) {
-    var client = net.createConnection({ port: port }, function () {
+function get_port_weird(port, host, cb) {
+    var client = net.createConnection({ port: port, host: host }, function () {
         client.end();
-        get_port(port + 1, cb);
+        get_port(port + 1, host, cb);
     })
         .on('error', function () {
         cb(port);
diff --git a/node_modules/sapper/dist/chunk-b0d6f7d4.js b/node_modules/sapper/dist/chunk-b0d6f7d4.js
index f013ea7..e26dd44 100644
--- a/node_modules/sapper/dist/chunk-b0d6f7d4.js
+++ b/node_modules/sapper/dist/chunk-b0d6f7d4.js
@@ -146,7 +146,7 @@ class Watcher extends EventEmitter.EventEmitter {
 		if (!this.dev_port) this.dev_port = await __chunk_1.find(10000);
 
 		// Chrome looks for debugging targets on ports 9222 and 9229 by default
-		if (!this.devtools_port) this.devtools_port = await __chunk_1.find(9222);
+		if (!this.devtools_port) this.devtools_port = await __chunk_1.find(9222, '127.0.0.1');
 
 		let manifest_data;
 
@@ -257,48 +257,54 @@ class Watcher extends EventEmitter.EventEmitter {
 							});
 					};
 
+					const start_server = () => {
+						// we need to give the child process its own DevTools port,
+						// otherwise Node will try to use the parent's (and fail)
+						const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;
+						const execArgv = process.execArgv.slice();
+						if (execArgv.some((arg) => !!arg.match(debugArgRegex))) {
+							execArgv.push(`--inspect-port=${this.devtools_port}`);
+						}
+
+						this.proc = child_process.fork(`${dest}/server/server.js`, [], {
+							cwd: process.cwd(),
+							env: Object.assign({
+								PORT: this.port
+							}, process.env),
+							stdio: ['ipc'],
+							execArgv
+						});
+
+						this.proc.stdout.on('data', chunk => {
+							this.emit('stdout', chunk);
+						});
+
+						this.proc.stderr.on('data', chunk => {
+							this.emit('stderr', chunk);
+						});
+
+						this.proc.on('message', message => {
+							if (message.__sapper__ && message.event === 'basepath') {
+								this.emit('basepath', {
+									basepath: message.basepath
+								});
+							}
+						});
+
+						this.proc.on('exit', emitFatal);
+					}
+
 					if (this.proc) {
 						this.proc.removeListener('exit', emitFatal);
 						this.proc.kill();
-						this.proc.on('exit', restart);
+						this.proc.on('exit', () => {
+							start_server();
+							restart();
+						});
 					} else {
+						start_server();
 						restart();
 					}
-
-					// we need to give the child process its own DevTools port,
-					// otherwise Node will try to use the parent's (and fail)
-					const debugArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;
-					const execArgv = process.execArgv.slice();
-					if (execArgv.some((arg) => !!arg.match(debugArgRegex))) {
-						execArgv.push(`--inspect-port=${this.devtools_port}`);
-					}
-
-					this.proc = child_process.fork(`${dest}/server/server.js`, [], {
-						cwd: process.cwd(),
-						env: Object.assign({
-							PORT: this.port
-						}, process.env),
-						stdio: ['ipc'],
-						execArgv
-					});
-
-					this.proc.stdout.on('data', chunk => {
-						this.emit('stdout', chunk);
-					});
-
-					this.proc.stderr.on('data', chunk => {
-						this.emit('stderr', chunk);
-					});
-
-					this.proc.on('message', message => {
-						if (message.__sapper__ && message.event === 'basepath') {
-							this.emit('basepath', {
-								basepath: message.basepath
-							});
-						}
-					});
-
-					this.proc.on('exit', emitFatal);
 				});
 			}
 		});
diff --git a/node_modules/sapper/runtime/server.mjs b/node_modules/sapper/runtime/server.mjs
index 61de2f6..ffa590e 100644
--- a/node_modules/sapper/runtime/server.mjs
+++ b/node_modules/sapper/runtime/server.mjs
@@ -2239,7 +2239,8 @@ function get_page_handler(
 				? manifest.root_preload.call(preload_context, {
 					path: req.path,
 					query: req.query,
-					params: {}
+					params: {},
+					error
 				}, session)
 				: {};
 
